// took inspo from https://bulma.io/documentation/overview/customize/ and altered it to fit my way
@import "_colour-functions";

// Our theme:
$primary: indigo !default;
$primary-contrast: findColorContrast($primary) !default;
$accent: orange !default;
$accent-contrast: findColorContrast($accent) !default;
//=====================================================================
//Default Theme - use custom nested sass map for this
//choose 1 primary and 1 accent colour
//we could use scale-color() or tint/shade to get lighter and darker hues...
$theme: (primary: 
            (base    : $primary, 
            light    : lighten($primary,20%),
            dark     : darken($primary,20%), 
            invert   : invert($primary), 
            text-contrast : $primary-contrast),
        accent: 
            (base   : $accent, 
            light   : lighten($accent,20%), 
            dark    :darken($accent,20%), 
            invert  :invert($accent),
            text-contrast : $accent-contrast)
    );

// All Other System Default Colours:

$black: hsl(0, 0%, 4%) !default;
$black-bis: hsl(0, 0%, 7%) !default;
$black-ter: hsl(0, 0%, 14%) !default;

$grey-darker: hsl(0, 0%, 21%) !default;
$grey-dark: hsl(0, 0%, 29%) !default;
$grey: hsl(0, 0%, 48%) !default;
$grey-light: hsl(0, 0%, 71%) !default;
$grey-lighter: hsl(0, 0%, 86%) !default;

$white-ter: hsl(0, 0%, 96%) !default;
$white-bis: hsl(0, 0%, 98%) !default;
$white: hsl(0, 0%, 100%) !default;

$orange: hsl(14, 100%, 53%) !default;
$yellow: hsl(48, 100%, 67%) !default;
$green: hsl(141, 71%, 48%) !default;
$turquoise: hsl(171, 100%, 41%) !default;
$cyan: hsl(204, 86%, 53%) !default;
$blue: hsl(217, 71%, 53%) !default;
$purple: hsl(271, 100%, 71%) !default;
$red: hsl(348, 100%, 61%) !default;
// Derived Colours - Base Colours
$info: $cyan !default;
$success: $green !default;
$warning: $yellow !default;
$danger: $red !default;

$light: $white-ter !default;
$dark: $grey-darker !default;

// Invert colors
$orange-contrast: findColorContrast($orange) !default;
$yellow-contrast: findColorContrast($yellow) !default;
$green-contrast: findColorContrast($green) !default;
$turquoise-contrast: findColorContrast($turquoise) !default;
$cyan-contrast: findColorContrast($cyan) !default;
$blue-contrast: findColorContrast($blue) !default;
$purple-contrast: findColorContrast($purple) !default;
$red-contrast: findColorContrast($red) !default;

$info-contrast: $cyan-contrast !default;
$success-contrast: $green-contrast !default;
$warning-contrast: $yellow-contrast !default;
$danger-contrast: $red-contrast !default;
$light-contrast: $dark !default;
$dark-contrast: $light !default;

// General colors
$background: $white-ter !default;

$bordercolor: $grey-lighter !default;
$border-hover: $grey-light !default;

// Text colors
$textcolor: $grey-dark !default;
$textcolor-light: $grey !default;
$textcolor-strong: $grey-darker !default;

// Code colors
$code: $red !default;
$code-background: $background !default;

$pre: $textcolor !default;
$pre-background: $background !default;

// Link colors
$link: $blue !default;
$link-contrast: $blue-contrast !default;

$link-visited: $purple !default;

$link-hover: $grey-darker !default;
$link-hover-border: $grey-light !default;

$link-focus: $grey-darker !default;
$link-focus-border: $blue !default;

$link-active: $grey-darker !default;
$link-active-border: $grey-dark !default;

// Lists and maps
// Q. why use maps for these? - A. one good reason is for looping functions - makes it easy to create a button of every color dynamically - see button.scss for example
$colors: ("white": ($white, $black), "black": ($black, $white), "light": ($light, $light-contrast), "dark": ($dark, $dark-contrast), "primary": ($primary, $primary-contrast), "link": ($link, $link-contrast), "info": ($info, $info-contrast), "success": ($success, $success-contrast), "warning": ($warning, $warning-contrast), "danger": ($danger, $danger-contrast)) !default;
$shades: ("black-bis": $black-bis, "black-ter": $black-ter, "grey-darker": $grey-darker, "grey-dark": $grey-dark, "grey": $grey, "grey-light": $grey-light, "grey-lighter": $grey-lighter, "white-ter": $white-ter, "white-bis": $white-bis) !default;